10장. 흥미로운 시간
(103p)
" 우리에겐 깔끔한 코드와, 그 코드가 잘 작동할 것이라는 믿음을 줄 수 있는 테스트 코드들이 있다.
몇 분 동안 고민하는 대신 그냥 수정하고 테스트를 돌려서 컴퓨터에게 직접 물어보자. ...
컴퓨터라면 10초에서 15초 사이에 대답할 수 있는 문제를 놓고 최고의 소프트웨어 엔지니어들이 5분에서 10분동안 고민하곤 한다.
가끔은 그냥 컴퓨터에게 물어보는 것도 좋다. "

이 부분을 읽고 내가 테스트 코드를 작성하지 않을 때 고민했던 시간들과 불확실함을 느꼈던 감정들이 생각났다.
아직 테스트 코드를 생각 못하고 로직을 구현하고 고민하던 습관이 남아 있는데,
실제로 테스트 코드의 덕을 많이 보고 있고, 그 효율성을 느낄 때의 순간이 이 구문을 읽으면서 크게 와닿았다.

12장. 드디어 더하기
(113p)
"$5 + 10CHF = $10
 $5 + $5    = $10"
 윗 줄의 환산식을 아랫줄처럼 표현할 수 있음이 신선했다.

(115p)
" TDD는 적절한 때에 번뜩이는 통찰을 보장하지 못한다.
  그렇지만 확신을 주는 테스트와 조심스럽게 정리된 코드를 통해,
  통찰에 대한 준비와 함께 통찰이 번뜩일 때 그걸 적용할 준비를 할 수 있다. "
이 문장이 어떤 의미를 담고 있는지 직관적으로 이해가 잘 가지 않는다.

